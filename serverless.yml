service: blog-api

plugins:
  - serverless-secrets-plugin

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - ses:SendEmail
      Resource: "*"

custom:
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}

# Lambda functions
functions:
  courses:
    handler: handlers/CoursesHandler.getCourses
    events:
      - http:
          path: courses
          method: get
          cors: true

  articles:
    handler: handlers/ArticlesHandler.getArticles
    events:
      - http:
          path: articles
          method: get
          cors: true

  send-message:
    handler: handlers/MessageHandler.sendMessage
    events:
      - http:
          path: send-message
          method: post
          cors: true
    environment:
      AWS_KEY_ID: ${self:custom.secrets.AWS_ACCESS_KEY_ID}
      AWS_SECRET: ${self:custom.secrets.AWS_SECRET_ACCESS_KEY}
      REGION: ${self:custom.secrets.REGION}

# CloudFormation resource template
resources:
  Resources:
    uploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-upload
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
